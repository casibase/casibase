{
  "account": {
    "The default store is not found": "未找到默认存储",
    "The store: %s is not found": "未找到存储：%s"
  },
  "agent": {
    "the agent provider type: %s is not supported": "不支持代理提供商类型：%s"
  },
  "application": {
    "Failed to update application": "更新应用程序失败",
    "Missing required parameters": "缺少必需参数",
    "The Template not found": "未找到模板"
  },
  "audio": {
    "complete slice upload failed: %s": "分片上传完成失败：%s",
    "get progress failed: %s": "获取进度失败：%s",
    "get result failed: %s": "获取结果失败：%s",
    "init slice upload failed: %s": "初始化分片上传失败：%s",
    "perform slice upload failed: %s": "执行分片上传失败：%s",
    "worker upload failed: %s": "工作节点上传失败：%s"
  },
  "auth": {
    "Please sign in first": "请先登录",
    "Unauthorized operation": "未授权的操作",
    "this operation requires admin privilege": "此操作需要管理员权限"
  },
  "blockchain": {
    "The default blockchain provider is not found": "未找到默认区块链提供商",
    "The default blockchain providers' Provider URL cannot be empty. The default value is: 'http://localhost:13900'": "默认区块链提供商的Provider URL不能为空。默认值为：'http://localhost:13900'"
  },
  "bpmn": {
    "Error parsing BPMN file: %v": "解析BPMN文件错误：%v"
  },
  "chain": {
    "ChainTencentChainmakerClient.Client.Invoke() error: %v": "ChainTencentChainmakerClient.Client.Invoke() 错误：%v",
    "ChainTencentChainmakerDemoClient.Client.InvokeChainMakerDemoContract() error: %v": "ChainTencentChainmakerDemoClient.Client.InvokeChainMakerDemoContract() 错误：%v",
    "TencentCloudSDKError, code = %d, message = %s": "腾讯云SDK错误，错误码：%d，错误信息：%s",
    "TencentCloudSDKError: %v": "腾讯云SDK错误：%v",
    "chainmakerEndpoint is not configured": "未配置chainmaker端点（chainmakerEndpoint）",
    "event log value is not string: %v": "事件日志值非字符串类型：%v",
    "failed to connect to Ethereum RPC: %v": "连接以太坊RPC失败：%v",
    "failed to create string type: %v": "创建字符串类型失败：%v",
    "failed to create tuple type: %v": "创建元组类型失败：%v",
    "failed to estimate gas: %v": "预估燃气（gas）失败：%v",
    "failed to get chain ID: %v": "获取链ID失败：%v",
    "failed to get pending nonce: %v": "获取待处理随机数（pending nonce）失败：%v",
    "failed to get transaction receipt: %v": "获取交易回执失败：%v",
    "failed to pack arguments: %v": "打包参数失败：%v",
    "failed to pack function data: %v": "打包函数数据失败：%v",
    "failed to parse private key: %v": "解析私钥失败：%v",
    "failed to send transaction: %v": "发送交易失败：%v",
    "failed to sign transaction: %v": "签名交易失败：%v",
    "failed to suggest gas price: %v": "建议燃气价格（gas price）失败：%v",
    "failed to unmarshal JSON: %v": "反序列化JSON失败：%v",
    "failed to unpack event log: %v": "解包事件日志失败：%v",
    "marshal normalized data error: %v": "序列化标准化数据错误：%v",
    "newChainTencentChainmakerClient() error: %v": "创建ChainTencentChainmakerClient（newChainTencentChainmakerClient()）错误：%v",
    "not enough string events found in transaction logs, expected at least 3, got %d": "交易日志中找到的字符串事件数量不足，预期至少3个，实际获取：%d个",
    "parse json data error: %v": "解析JSON数据错误：%v",
    "transaction failed to be mined: %v": "交易挖矿失败：%v",
    "transaction failed with status: %d, reason: %s": "交易失败，状态码：%d，原因：%s"
  },
  "chat": {
    "The default store is not found": "The default store is not found"
  },
  "controllers": {
    "No permission": "无权限",
    "No records to add": "没有要添加的记录",
    "No sessions to delete": "没有要删除的会话",
    "You can only view your own chats": "您只能查看自己的聊天",
    "You can only view your own messages": "您只能查看自己的消息"
  },
  "embedding": {
    "calculatePrice() error: unknown model type: %s": "calculatePrice() 错误：未知模型类型：%s",
    "error unmarshaling response JSON: %v": "反序列化响应JSON错误：%v",
    "failed to calculate price: %v": "计算价格失败：%v",
    "failed to create client: %v": "创建客户端失败：%v",
    "failed to create request: %v": "创建请求失败：%v",
    "failed to get valid response, status code: %d": "获取有效响应失败，状态码：%d",
    "failed to load word2vec model: %v": "加载word2vec模型失败：%v",
    "failed to marshal payload: %v": "序列化负载（payload）失败：%v",
    "failed to open model file: %v": "打开模型文件失败：%v",
    "failed to read header: %v": "读取头部信息失败：%v",
    "failed to read response body: %v": "读取响应体失败：%v",
    "failed to read vector: %v": "读取向量失败：%v",
    "failed to read word: %v": "读取单词失败：%v",
    "failed to unmarshal response: %v": "反序列化响应失败：%v",
    "input text is empty": "输入文本为空",
    "no embedding provider specified": "未指定嵌入（embedding）提供商",
    "no embedding vector found in response": "响应中未找到嵌入向量",
    "no embeddings found in the response": "响应中未找到嵌入数据（embeddings）",
    "none of the tokens were found in the vocabulary": "词汇表中未找到任何标记（token）",
    "request failed with status code %d: %s": "请求失败，状态码：%d，错误信息：%s",
    "text can not be empty.": "文本不能为空。",
    "text cannot be empty": "文本不能为空"
  },
  "message_answer": {
    "object.GetNearestKnowledge() error, %s": "object.GetNearestKnowledge() 错误，%s"
  },
  "model": {
    "QueryText() error: unknown model type: %s": "QueryText() 错误：未知模型类型：%s",
    "The token count: [%d] exceeds the model: [%s]'s maximum token count: [%d]": "标记（token）数量：[%d] 超过模型：[%s] 的最大标记数量：[%d]",
    "calculatePrice() error: unknown model type: %s": "calculatePrice() 错误：未知模型类型：%s",
    "calculatePrice() error: video generation pricing requires duration information": "calculatePrice() 错误：视频生成定价需要时长信息",
    "cannot calculate tokens": "无法计算标记（token）数量",
    "error getting chat completion: %v": "获取聊天补全（chat completion）错误：%v",
    "exceed max tokens": "超过最大标记（token）数量",
    "failed to calculate price: %v": "计算价格失败：%v",
    "failed to marshal content: %v": "failed to marshal content: %v",
    "failed to marshal error content: %v": "failed to marshal error content: %v",
    "failed to marshal tool response: %v": "序列化工具响应失败：%v",
    "failed to parse tool arguments: %v": "解析工具参数失败：%v",
    "failed to write response: %v": "写入响应失败：%v",
    "no generations returned": "未返回生成结果（generations）",
    "the token count: [%d] exceeds the model: [%s]'s maximum token count: [%d]": "标记（token）数量：[%d] 超过模型：[%s] 的最大标记数量：[%d]",
    "unsupported model: %s": "不支持的模型：%s",
    "writer does not implement http.Flusher": "写入器（writer）未实现 http.Flusher 接口"
  },
  "object": {
    "Cannot generate word cloud, the dict file: [%s] does not exist": "无法生成词云，词典文件：[%s] 不存在",
    "Casdoor application: [%s] doesn't exist": "Casdoor 应用：[%s] 不存在",
    "Casdoor organization: [%s] doesn't exist": "Casdoor 组织：[%s] 不存在",
    "Please add a model provider first": "请先添加模型提供商",
    "Please add an embedding provider first": "请先添加嵌入提供商",
    "Question message: [%s] doesn't exist": "问题消息：[%s] 不存在",
    "SendErrorEmail() error, the receiver user: ": "SendErrorEmail() error, the receiver user: ",
    "The agent provider: %s is expected to be ": "The agent provider: %s is expected to be ",
    "The chat: %s is not found": "聊天：%s 未找到",
    "The default video provider should not be empty": "默认视频提供商不能为空",
    "The embedding provider for store: %s is not found": "存储 %s 的嵌入提供商未找到",
    "The embedding provider: %s is expected to be ": "The embedding provider: %s is expected to be ",
    "The embedding provider: %s is not found": "嵌入提供商：%s 未找到",
    "The embedding provider: %s's client secret should not be empty": "嵌入提供商：%s 的客户端密钥不能为空",
    "The image provider for store: %s should not be empty": "存储 %s 的图像提供商不能为空",
    "The message: %s is not found": "消息：%s 未找到",
    "The model provider for store: %s is not found": "存储 %s 的模型提供商未找到",
    "The model provider: %s is expected to be ": "The model provider: %s is expected to be ",
    "The model provider: %s is not found": "模型提供商：%s 未找到",
    "The model provider: %s's client secret should not be empty": "模型提供商：%s 的客户端密钥不能为空",
    "The provider is not found": "提供商未找到",
    "The provider: %s does not exist": "提供商：%s 不存在",
    "The provider: %s is not found": "提供商：%s 未找到",
    "The store's embedding provider: [%s] should equal to vector's embedding provider: [%s], vector = %v": "存储的嵌入提供商：[%s] 应与向量的嵌入提供商：[%s] 一致，向量 = %v",
    "The store: %s is not found": "存储：%s 未找到",
    "The text-to-speech provider for store: %s is not found": "存储 %s 的文本转语音提供商未找到",
    "deployment failed, and could not retrieve failure details: %v": "部署失败，无法获取失败详情：%v",
    "deployment failed: %s": "部署失败：%s",
    "empty provider key": "提供商密钥为空",
    "failed to connect to kubernetes cluster: %v": "连接 Kubernetes 集群失败：%v",
    "failed to convert result to yaml: %v": "转换结果为 YAML 失败：%v",
    "failed to create discovery client: %v": "创建发现客户端失败：%v",
    "failed to create dynamic client: %v": "创建动态客户端失败：%v",
    "failed to create kubernetes clientSet: %v": "创建 Kubernetes 客户端集失败：%v",
    "failed to create namespace: %v": "创建命名空间失败：%v",
    "failed to create resource %s/%s: %v": "创建资源 %s/%s 失败：%v",
    "failed to create root directory: %v": "创建根目录失败：%v",
    "failed to decode YAML: %v": "解码 YAML 失败：%v",
    "failed to delete namespace: %v": "删除命名空间失败：%v",
    "failed to deploy application": "部署应用失败",
    "failed to deploy manifest: %v": "部署清单失败：%v",
    "failed to deploy resource: %v": "部署资源失败：%v",
    "failed to generate manifest: %v": "生成清单失败：%v",
    "failed to get API group resources: %v": "获取 API 组资源失败：%v",
    "failed to get REST mapping for %s: %v": "获取 %s 的 REST 映射失败：%v",
    "failed to get default Kubernetes provider: %v": "获取默认 Kubernetes 提供商失败：%v",
    "failed to get existing resource %s/%s: %v": "获取现有资源 %s/%s 失败：%v",
    "failed to get namespace: %v": "获取命名空间失败：%v",
    "failed to get pod metrics: %v": "获取 Pod 指标失败：%v",
    "failed to get providers: %v": "获取提供商失败：%v",
    "failed to get record with id '%s': %w": "获取 ID 为 '%s' 的记录失败：%w",
    "failed to initialize cache manager: %v": "初始化缓存管理器失败：%v",
    "failed to initialize k8s client: %v": "初始化 k8s 客户端失败：%v",
    "failed to list pods in namespace %s: %w": "列出命名空间 %s 中的 Pod 失败：%w",
    "failed to marshal kustomization: %v": "序列化 kustomization 失败：%v",
    "failed to parse kubeconfig from provider: %v": "从提供商解析 kubeconfig 失败：%v",
    "failed to parse kubeconfig: %v": "解析 kubeconfig 失败：%v",
    "failed to parse record identifier '%s': neither a valid owner/[id|name] format": "解析记录标识符 '%s' 失败：不是有效的 owner/[id|name] 格式",
    "failed to parse record: name %s, field %s, error: %v": "解析记录失败：名称 %s，字段 %s，错误：%v",
    "failed to parse server URL: %v": "解析服务器 URL 失败：%v",
    "failed to start cache manager: %v": "启动缓存管理器失败：%v",
    "failed to start undeployment": "启动取消部署失败",
    "failed to update error text for record %s: %s": "更新记录 %s 的错误文本失败：%s",
    "failed to update resource %s/%s: %v": "更新资源 %s/%s 失败：%v",
    "failed to write kustomization.yaml: %v": "写入 kustomization.yaml 失败：%v",
    "failed to write patch file: %v": "写入补丁文件失败：%v",
    "failed to write resource file: %v": "写入资源文件失败：%v",
    "getExtFromMimeType() error: unknown MimeType: %s": "getExtFromMimeType() 错误：未知的 MimeType：%s",
    "invalid range type: %s": "无效的范围类型：%s",
    "k8s client is not connected to the cluster": "k8s 客户端未连接到集群",
    "k8s client not connected": "k8s 客户端未连接",
    "k8s client not connected to cluster": "k8s 客户端未连接到集群",
    "k8s client not initialized": "k8s 客户端未初始化",
    "kubeconfig content is empty": "kubeconfig 内容为空",
    "kustomize run failed: %v": "kustomize 运行失败：%v",
    "metrics client not available": "指标客户端不可用",
    "namespace %s is terminating and all resources have been cleaned up": "命名空间 %s 正在终止，所有资源已清理",
    "namespace cannot be empty": "命名空间不能为空",
    "no Kubernetes provider found": "未找到 Kubernetes 提供商",
    "no accessible URL found for application": "未找到应用的可访问 URL",
    "no qVector found": "未找到 qVector",
    "parseBase64Image() error: invalid image format": "parseBase64Image() 错误：无效的图像格式",
    "provider kubeconfig content is empty": "提供商 kubeconfig 内容为空",
    "queryVectorSafe() error, %s": "queryVectorSafe() 错误，%s",
    "server address not found": "未找到服务器地址",
    "the STT provider type: %s is not supported": "不支持的 STT 提供商类型：%s",
    "the TTS provider type: %s is not supported": "不支持的 TTS 提供商类型：%s",
    "the agent provider type: %s is not supported": "不支持的代理提供商类型：%s",
    "the blockchain provider: %s is not found": "区块链提供商：%s 未找到",
    "the embedding provider type: %s is not supported": "不支持的嵌入提供商类型：%s",
    "the form: %s is not found": "表单：%s 未找到",
    "the model provider type: %s is not supported": "不支持的模型提供商类型：%s",
    "the record: %s does not exist": "记录：%s 不存在",
    "the record: %s has already been committed, blockId = %s": "记录：%s 已提交，blockId = %s",
    "the record: %s's block ID should not be empty": "记录：%s 的区块 ID 不能为空",
    "the scan provider type: %s is not supported": "the scan provider type: %s is not supported",
    "the storage provider type: %s is not supported": "不支持的存储提供商类型：%s",
    "there is no active blockchain provider": "没有活跃的区块链提供商",
    "unable to extract host": "无法提取主机",
    "undeployment timeout: application did not undeploy within 10 minutes": "取消部署超时：应用未在10分钟内完成取消部署"
  },
  "openai": {
    "Invalid API key format. Expected 'Bearer API_KEY'": "Invalid API key format. Expected 'Bearer API_KEY'",
    "No user message found in the request": "No user message found in the request"
  },
  "pkgdocker": {
    "Container %s not found": "容器 %s 未找到"
  },
  "pkgimage": {
    "unsupported provider type: %s": "不支持的提供商类型：%s"
  },
  "pkgkubernets": {
    "Pod %s not found": "Pod %s 未找到"
  },
  "pkgmachine": {
    "Domain: [%s]'s state has been successfully updated to: [%s]": "域：[%s] 的状态已成功更新为：[%s]",
    "Instance not found: %s": "实例未找到：%s",
    "Instance: [%s] is not found": "实例：[%s] 未找到",
    "Instance: [%s]'s state has been successfully updated to: [%s]": "实例：[%s] 的状态已成功更新为：[%s]",
    "Not implemented": "未实现",
    "Tencent Cloud API error: %s": "腾讯云 API 错误：%s",
    "Unsupported state: %s": "不支持的状态：%s",
    "VMware API error, code = %d, message = %s": "VMware API 错误，错误码 = %d，错误信息 = %s",
    "unsupported provider type: %s": "不支持的提供商类型：%s"
  },
  "provider": {
    "Provider not found": "Provider not found"
  },
  "resource": {
    "Invalid file data format": "Invalid file data format",
    "Missing required parameters": "缺少必需参数"
  },
  "storage": {
    "storage provider name: [%s] doesn't exist": "存储提供商名称：[%s] 不存在"
  },
  "store": {
    "given that there must be one default store in Casibase, you cannot set this store to non-default. You can directly set another store as default": "given that there must be one default store in Casibase, you cannot set this store to non-default. You can directly set another store as default"
  },
  "stt": {
    "API error: %s": "API 错误：%s",
    "Missing required parameter: storeId": "Missing required parameter: storeId",
    "speech recognition API error: %v": "语音识别 API 错误：%v",
    "speech recognition timed out after %v seconds": "语音识别在 %v 秒后超时"
  },
  "tts": {
    "The audio data is nil": "The audio data is nil",
    "calculatePrice() error: unknown model type: %s": "calculatePrice() 错误：未知的模型类型：%s",
    "error creating synthesizer: %v": "创建合成器错误：%v",
    "error finishing task: %v": "完成任务错误：%v",
    "error running task: %v": "运行任务错误：%v",
    "error sending text: %v": "发送文本错误：%v",
    "output error: %v": "输出错误：%v",
    "writer does not implement http.Flusher": "writer 未实现 http.Flusher 接口"
  },
  "txt": {
    ".docx file is empty": ".docx 文件为空",
    "GetTextFromMarkitdown() error, failed to open file: %v": "GetTextFromMarkitdown() 错误，文件打开失败：%v",
    "GetTextFromMarkitdown() error, markitdown does not exist": "GetTextFromMarkitdown() 错误，markitdown 不存在",
    "GetTextFromMarkitdown() error, markitdown failed to run: %v: %s": "GetTextFromMarkitdown() 错误，markitdown 运行失败：%v：%s",
    "unsupported file type: %s": "不支持的文件类型：%s"
  },
  "video": {
    "The video can only be updated when there are no remarks and the state is \"Draft\"": "The video can only be updated when there are no remarks and the state is \"Draft\"",
    "UploadVideo() error, videoId should not be empty": "UploadVideo() error, videoId should not be empty"
  }
}
