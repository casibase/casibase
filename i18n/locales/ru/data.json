{
  "account": {
    "The default store is not found": "Хранилище по умолчанию не найдено",
    "The store: %s is not found": "Хранилище: %s не найдено"
  },
  "agent": {
    "the agent provider type: %s is not supported": "Тип поставщика агента: %s не поддерживается"
  },
  "application": {
    "Failed to update application": "Не удалось обновить приложение",
    "Missing required parameters": "Отсутствуют обязательные параметры",
    "The Template not found": "Шаблон не найден"
  },
  "audio": {
    "complete slice upload failed: %s": "complete slice upload failed: %s",
    "get progress failed: %s": "get progress failed: %s",
    "get result failed: %s": "get result failed: %s",
    "init slice upload failed: %s": "init slice upload failed: %s",
    "perform slice upload failed: %s": "perform slice upload failed: %s",
    "worker upload failed: %s": "worker upload failed: %s"
  },
  "auth": {
    "Please sign in first": "Сначала войдите в систему",
    "Unauthorized operation": "Несанкционированная операция",
    "this operation requires admin privilege": "Для этой операции требуются права администратора"
  },
  "blockchain": {
    "The default blockchain provider is not found": "The default blockchain provider is not found",
    "The default blockchain providers' Provider URL cannot be empty. The default value is: 'http://localhost:13900'": "The default blockchain providers' Provider URL cannot be empty. The default value is: 'http://localhost:13900'"
  },
  "bpmn": {
    "Error parsing BPMN file: %v": "Ошибка при разборе файла BPMN: %v"
  },
  "chain": {
    "ChainTencentChainmakerClient.Client.Invoke() error: %v": "Ошибка ChainTencentChainmakerClient.Client.Invoke(): %v",
    "ChainTencentChainmakerDemoClient.Client.InvokeChainMakerDemoContract() error: %v": "ChainTencentChainmakerDemoClient.Client.InvokeChainMakerDemoContract() error: %v",
    "TencentCloudSDKError, code = %d, message = %s": "TencentCloudSDKError, код = %d, сообщение = %s",
    "TencentCloudSDKError: %v": "TencentCloudSDKError: %v",
    "chainmakerEndpoint is not configured": "chainmakerEndpoint не настроен",
    "event log value is not string: %v": "event log value is not string: %v",
    "failed to connect to Ethereum RPC: %v": "Не удалось подключиться к Ethereum RPC: %v",
    "failed to create string type: %v": "failed to create string type: %v",
    "failed to create tuple type: %v": "failed to create tuple type: %v",
    "failed to estimate gas: %v": "failed to estimate gas: %v",
    "failed to get chain ID: %v": "failed to get chain ID: %v",
    "failed to get pending nonce: %v": "failed to get pending nonce: %v",
    "failed to get transaction receipt: %v": "failed to get transaction receipt: %v",
    "failed to pack arguments: %v": "failed to pack arguments: %v",
    "failed to pack function data: %v": "failed to pack function data: %v",
    "failed to parse private key: %v": "failed to parse private key: %v",
    "failed to send transaction: %v": "failed to send transaction: %v",
    "failed to sign transaction: %v": "failed to sign transaction: %v",
    "failed to suggest gas price: %v": "failed to suggest gas price: %v",
    "failed to unmarshal JSON: %v": "failed to unmarshal JSON: %v",
    "failed to unpack event log: %v": "failed to unpack event log: %v",
    "marshal normalized data error: %v": "marshal normalized data error: %v",
    "newChainTencentChainmakerClient() error: %v": "newChainTencentChainmakerClient() error: %v",
    "not enough string events found in transaction logs, expected at least 3, got %d": "not enough string events found in transaction logs, expected at least 3, got %d",
    "parse json data error: %v": "parse json data error: %v",
    "transaction failed to be mined: %v": "transaction failed to be mined: %v",
    "transaction failed with status: %d, reason: %s": "transaction failed with status: %d, reason: %s"
  },
  "chat": {
    "The default store is not found": "Хранилище по умолчанию не найдено"
  },
  "controllers": {
    "No permission": "Нет разрешения",
    "No records to add": "Нет записей для добавления",
    "No sessions to delete": "Нет сеансов для удаления",
    "You can only view your own chats": "Вы можете просматривать только свои чаты",
    "You can only view your own messages": "Вы можете просматривать только свои сообщения"
  },
  "embedding": {
    "calculatePrice() error: unknown model type: %s": "Ошибка calculatePrice(): неизвестный тип модели: %s",
    "error unmarshaling response JSON: %v": "Ошибка при десериализации ответа JSON: %v",
    "failed to calculate price: %v": "failed to calculate price: %v",
    "failed to create client: %v": "Не удалось создать клиент: %v",
    "failed to create request: %v": "failed to create request: %v",
    "failed to get valid response, status code: %d": "failed to get valid response, status code: %d",
    "failed to load word2vec model: %v": "failed to load word2vec model: %v",
    "failed to marshal payload: %v": "failed to marshal payload: %v",
    "failed to open model file: %v": "failed to open model file: %v",
    "failed to read header: %v": "failed to read header: %v",
    "failed to read response body: %v": "failed to read response body: %v",
    "failed to read vector: %v": "failed to read vector: %v",
    "failed to read word: %v": "failed to read word: %v",
    "failed to unmarshal response: %v": "failed to unmarshal response: %v",
    "input text is empty": "входной текст пуст",
    "no embedding provider specified": "не указан поставщик встраивания",
    "no embedding vector found in response": "no embedding vector found in response",
    "no embeddings found in the response": "no embeddings found in the response",
    "none of the tokens were found in the vocabulary": "none of the tokens were found in the vocabulary",
    "request failed with status code %d: %s": "request failed with status code %d: %s",
    "text can not be empty.": "текст не может быть пустым.",
    "text cannot be empty": "текст не может быть пустым"
  },
  "message_answer": {
    "object.GetNearestKnowledge() error, %s": "object.GetNearestKnowledge() error, %s"
  },
  "model": {
    "QueryText() error: unknown model type: %s": "QueryText() error: unknown model type: %s",
    "The token count: [%d] exceeds the model: [%s]'s maximum token count: [%d]": "The token count: [%d] exceeds the model: [%s]'s maximum token count: [%d]",
    "calculatePrice() error: unknown model type: %s": "Ошибка calculatePrice(): неизвестный тип модели: %s",
    "calculatePrice() error: video generation pricing requires duration information": "calculatePrice() error: video generation pricing requires duration information",
    "cannot calculate tokens": "cannot calculate tokens",
    "error getting chat completion: %v": "error getting chat completion: %v",
    "exceed max tokens": "exceed max tokens",
    "failed to calculate price: %v": "failed to calculate price: %v",
    "failed to marshal content: %v": "failed to marshal content: %v",
    "failed to marshal error content: %v": "failed to marshal error content: %v",
    "failed to marshal tool response: %v": "failed to marshal tool response: %v",
    "failed to parse tool arguments: %v": "failed to parse tool arguments: %v",
    "failed to write response: %v": "failed to write response: %v",
    "no generations returned": "no generations returned",
    "the token count: [%d] exceeds the model: [%s]'s maximum token count: [%d]": "the token count: [%d] exceeds the model: [%s]'s maximum token count: [%d]",
    "unsupported model: %s": "unsupported model: %s",
    "writer does not implement http.Flusher": "writer does not implement http.Flusher"
  },
  "object": {
    "Cannot generate word cloud, the dict file: [%s] does not exist": "Cannot generate word cloud, the dict file: [%s] does not exist",
    "Casdoor application: [%s] doesn't exist": "Casdoor application: [%s] doesn't exist",
    "Casdoor organization: [%s] doesn't exist": "Casdoor organization: [%s] doesn't exist",
    "Please add a model provider first": "Please add a model provider first",
    "Please add an embedding provider first": "Please add an embedding provider first",
    "Question message: [%s] doesn't exist": "Question message: [%s] doesn't exist",
    "SendErrorEmail() error, the receiver user: ": "SendErrorEmail() error, the receiver user: ",
    "The agent provider: %s is expected to be ": "The agent provider: %s is expected to be ",
    "The chat: %s is not found": "The chat: %s is not found",
    "The default video provider should not be empty": "The default video provider should not be empty",
    "The embedding provider for store: %s is not found": "The embedding provider for store: %s is not found",
    "The embedding provider: %s is expected to be ": "The embedding provider: %s is expected to be ",
    "The embedding provider: %s is not found": "The embedding provider: %s is not found",
    "The embedding provider: %s's client secret should not be empty": "The embedding provider: %s's client secret should not be empty",
    "The image provider for store: %s should not be empty": "The image provider for store: %s should not be empty",
    "The message: %s is not found": "The message: %s is not found",
    "The model provider for store: %s is not found": "The model provider for store: %s is not found",
    "The model provider: %s is expected to be ": "The model provider: %s is expected to be ",
    "The model provider: %s is not found": "The model provider: %s is not found",
    "The model provider: %s's client secret should not be empty": "The model provider: %s's client secret should not be empty",
    "The provider is not found": "The provider is not found",
    "The provider: %s does not exist": "The provider: %s does not exist",
    "The provider: %s is not found": "The provider: %s is not found",
    "The store's embedding provider: [%s] should equal to vector's embedding provider: [%s], vector = %v": "The store's embedding provider: [%s] should equal to vector's embedding provider: [%s], vector = %v",
    "The store: %s is not found": "Хранилище: %s не найдено",
    "The text-to-speech provider for store: %s is not found": "The text-to-speech provider for store: %s is not found",
    "deployment failed, and could not retrieve failure details: %v": "deployment failed, and could not retrieve failure details: %v",
    "deployment failed: %s": "deployment failed: %s",
    "empty provider key": "empty provider key",
    "failed to connect to kubernetes cluster: %v": "failed to connect to kubernetes cluster: %v",
    "failed to convert result to yaml: %v": "failed to convert result to yaml: %v",
    "failed to create discovery client: %v": "failed to create discovery client: %v",
    "failed to create dynamic client: %v": "failed to create dynamic client: %v",
    "failed to create kubernetes clientSet: %v": "failed to create kubernetes clientSet: %v",
    "failed to create namespace: %v": "failed to create namespace: %v",
    "failed to create resource %s/%s: %v": "failed to create resource %s/%s: %v",
    "failed to create root directory: %v": "failed to create root directory: %v",
    "failed to decode YAML: %v": "failed to decode YAML: %v",
    "failed to delete namespace: %v": "failed to delete namespace: %v",
    "failed to deploy application": "failed to deploy application",
    "failed to deploy manifest: %v": "failed to deploy manifest: %v",
    "failed to deploy resource: %v": "failed to deploy resource: %v",
    "failed to generate manifest: %v": "failed to generate manifest: %v",
    "failed to get API group resources: %v": "failed to get API group resources: %v",
    "failed to get REST mapping for %s: %v": "failed to get REST mapping for %s: %v",
    "failed to get default Kubernetes provider: %v": "failed to get default Kubernetes provider: %v",
    "failed to get existing resource %s/%s: %v": "failed to get existing resource %s/%s: %v",
    "failed to get namespace: %v": "failed to get namespace: %v",
    "failed to get pod metrics: %v": "failed to get pod metrics: %v",
    "failed to get providers: %v": "failed to get providers: %v",
    "failed to get record with id '%s': %w": "failed to get record with id '%s': %w",
    "failed to initialize cache manager: %v": "failed to initialize cache manager: %v",
    "failed to initialize k8s client: %v": "failed to initialize k8s client: %v",
    "failed to list pods in namespace %s: %w": "failed to list pods in namespace %s: %w",
    "failed to marshal kustomization: %v": "failed to marshal kustomization: %v",
    "failed to parse kubeconfig from provider: %v": "failed to parse kubeconfig from provider: %v",
    "failed to parse kubeconfig: %v": "failed to parse kubeconfig: %v",
    "failed to parse record identifier '%s': neither a valid owner/[id|name] format": "failed to parse record identifier '%s': neither a valid owner/[id|name] format",
    "failed to parse record: name %s, field %s, error: %v": "failed to parse record: name %s, field %s, error: %v",
    "failed to parse server URL: %v": "failed to parse server URL: %v",
    "failed to start cache manager: %v": "failed to start cache manager: %v",
    "failed to start undeployment": "failed to start undeployment",
    "failed to update error text for record %s: %s": "failed to update error text for record %s: %s",
    "failed to update resource %s/%s: %v": "failed to update resource %s/%s: %v",
    "failed to write kustomization.yaml: %v": "failed to write kustomization.yaml: %v",
    "failed to write patch file: %v": "failed to write patch file: %v",
    "failed to write resource file: %v": "failed to write resource file: %v",
    "getExtFromMimeType() error: unknown MimeType: %s": "getExtFromMimeType() error: unknown MimeType: %s",
    "invalid range type: %s": "invalid range type: %s",
    "k8s client is not connected to the cluster": "k8s client is not connected to the cluster",
    "k8s client not connected": "k8s client not connected",
    "k8s client not connected to cluster": "k8s client not connected to cluster",
    "k8s client not initialized": "k8s client not initialized",
    "kubeconfig content is empty": "kubeconfig content is empty",
    "kustomize run failed: %v": "kustomize run failed: %v",
    "metrics client not available": "metrics client not available",
    "namespace %s is terminating and all resources have been cleaned up": "namespace %s is terminating and all resources have been cleaned up",
    "namespace cannot be empty": "namespace cannot be empty",
    "no Kubernetes provider found": "no Kubernetes provider found",
    "no accessible URL found for application": "no accessible URL found for application",
    "no qVector found": "no qVector found",
    "parseBase64Image() error: invalid image format": "parseBase64Image() error: invalid image format",
    "provider kubeconfig content is empty": "provider kubeconfig content is empty",
    "queryVectorSafe() error, %s": "queryVectorSafe() error, %s",
    "server address not found": "server address not found",
    "the STT provider type: %s is not supported": "the STT provider type: %s is not supported",
    "the TTS provider type: %s is not supported": "the TTS provider type: %s is not supported",
    "the agent provider type: %s is not supported": "Тип поставщика агента: %s не поддерживается",
    "the blockchain provider: %s is not found": "the blockchain provider: %s is not found",
    "the embedding provider type: %s is not supported": "the embedding provider type: %s is not supported",
    "the form: %s is not found": "the form: %s is not found",
    "the model provider type: %s is not supported": "the model provider type: %s is not supported",
    "the record: %s does not exist": "the record: %s does not exist",
    "the record: %s has already been committed, blockId = %s": "the record: %s has already been committed, blockId = %s",
    "the record: %s's block ID should not be empty": "the record: %s's block ID should not be empty",
    "the scan provider type: %s is not supported": "the scan provider type: %s is not supported",
    "the storage provider type: %s is not supported": "the storage provider type: %s is not supported",
    "there is no active blockchain provider": "there is no active blockchain provider",
    "unable to extract host": "unable to extract host",
    "undeployment timeout: application did not undeploy within 10 minutes": "undeployment timeout: application did not undeploy within 10 minutes"
  },
  "openai": {
    "Invalid API key format. Expected 'Bearer API_KEY'": "Invalid API key format. Expected 'Bearer API_KEY'",
    "No user message found in the request": "No user message found in the request"
  },
  "pkgdocker": {
    "Container %s not found": "Container %s not found"
  },
  "pkgimage": {
    "unsupported provider type: %s": "unsupported provider type: %s"
  },
  "pkgkubernets": {
    "Pod %s not found": "Pod %s not found"
  },
  "pkgmachine": {
    "Domain: [%s]'s state has been successfully updated to: [%s]": "Domain: [%s]'s state has been successfully updated to: [%s]",
    "Instance not found: %s": "Instance not found: %s",
    "Instance: [%s] is not found": "Instance: [%s] is not found",
    "Instance: [%s]'s state has been successfully updated to: [%s]": "Instance: [%s]'s state has been successfully updated to: [%s]",
    "Not implemented": "Not implemented",
    "Tencent Cloud API error: %s": "Tencent Cloud API error: %s",
    "Unsupported state: %s": "Unsupported state: %s",
    "VMware API error, code = %d, message = %s": "VMware API error, code = %d, message = %s",
    "unsupported provider type: %s": "unsupported provider type: %s"
  },
  "provider": {
    "Provider not found": "Provider not found"
  },
  "resource": {
    "Invalid file data format": "Invalid file data format",
    "Missing required parameters": "Отсутствуют обязательные параметры"
  },
  "storage": {
    "storage provider name: [%s] doesn't exist": "storage provider name: [%s] doesn't exist"
  },
  "store": {
    "given that there must be one default store in Casibase, you cannot set this store to non-default. You can directly set another store as default": "given that there must be one default store in Casibase, you cannot set this store to non-default. You can directly set another store as default"
  },
  "stt": {
    "API error: %s": "API error: %s",
    "Missing required parameter: storeId": "Missing required parameter: storeId",
    "speech recognition API error: %v": "speech recognition API error: %v",
    "speech recognition timed out after %v seconds": "speech recognition timed out after %v seconds"
  },
  "tts": {
    "The audio data is nil": "The audio data is nil",
    "calculatePrice() error: unknown model type: %s": "Ошибка calculatePrice(): неизвестный тип модели: %s",
    "error creating synthesizer: %v": "error creating synthesizer: %v",
    "error finishing task: %v": "error finishing task: %v",
    "error running task: %v": "error running task: %v",
    "error sending text: %v": "error sending text: %v",
    "output error: %v": "output error: %v",
    "writer does not implement http.Flusher": "writer does not implement http.Flusher"
  },
  "txt": {
    ".docx file is empty": ".docx file is empty",
    "GetTextFromMarkitdown() error, failed to open file: %v": "GetTextFromMarkitdown() error, failed to open file: %v",
    "GetTextFromMarkitdown() error, markitdown does not exist": "GetTextFromMarkitdown() error, markitdown does not exist",
    "GetTextFromMarkitdown() error, markitdown failed to run: %v: %s": "GetTextFromMarkitdown() error, markitdown failed to run: %v: %s",
    "unsupported file type: %s": "unsupported file type: %s"
  },
  "video": {
    "The video can only be updated when there are no remarks and the state is \"Draft\"": "The video can only be updated when there are no remarks and the state is \"Draft\"",
    "UploadVideo() error, videoId should not be empty": "UploadVideo() error, videoId should not be empty"
  }
}
